
-- CONFIGURANDO O AMBIENTE PARA MOSTRAR A SA�DA DO COMANDO PL-SQL NA "SA�DA DO SCRIPT"
SET SERVEROUTPUT ON;
DECLARE
-- DECLARANDO UM VARIAVEL E ATRIBUINDO O VALOR DE 1 PARA A MESMA
    v_ID NUMBER(5) := 1;

BEGIN
-- MOSTRANDO A VARIAVEL NA SAIDA DO SCRIPT
    dbms_output.put_line(v_ID);
    
-- ATRIBUINDO OUTRO VALOR A VARIAVEL E MOSTRANDO NA SAIDA DO SCRIPT
    v_ID := 2;
    dbms_output.put_line(v_ID);
END;

-- CRIANDO TABELA COM PL-SQL
DECLARE
    v_ID NUMBER(5) := 2;
    v_DESCRICAO VARCHAR(100) := 'Atacato';
BEGIN
    INSERT INTO SEGMERCADO (ID, DESCRICAO) VALUES (v_ID, v_DESCRICAO);
    COMMIT;
END;

-- UTILIZANDO O %TYPE PARA DEFINIR O TIPO DO ATRIBUTO
DECLARE
    v_ID SEGMERCADO.ID%type := 3;
    v_DESCRICAO SEGMERCADO.DESCRICAO%type := 'Industria';
BEGIN
    INSERT INTO SEGMERCADO (ID, DESCRICAO) VALUES (v_ID, v_DESCRICAO);
    COMMIT;
END;

-- REALIZAND UPDATE NA TABELA SEGMERCADO
DECLARE
    v_ID SEGMERCADO.ID%type := 1;
    v_DESCRICAO SEGMERCADO.DESCRICAO%type := 'Varejista';
BEGIN
    UPDATE SEGMERCADO SET DESCRICAO = UPPER(v_DESCRICAO) WHERE ID = v_ID;
    
    v_ID := 2;
    v_DESCRICAO := 'Atacadista';
    UPDATE SEGMERCADO SET DESCRICAO = UPPER(v_DESCRICAO) WHERE ID = v_ID;

    v_ID := 3;
    v_DESCRICAO := 'Industrial';
    UPDATE SEGMERCADO SET DESCRICAO = UPPER(v_DESCRICAO) WHERE ID = v_ID;    

    COMMIT;
END;

-- FAZENDO SELECT COM PL-SQL ATRIBUINDO APENAS UM VALOR PARA A VARIAVEL CRIADA(v_DESCRICAO)
DECLARE
    v_ID SEGMERCADO.ID%type := 2;
    v_DESCRICAO SEGMERCADO.DESCRICAO%type;
BEGIN
    SELECT DESCRICAO INTO v_DESCRICAO FROM SEGMERCADO WHERE ID = v_ID;
    dbms_output.put_line(v_DESCRICAO);    
END;

-- CRIANDO UMA VARIAVEL
VARIABLE g_DESCRICAO VARCHAR2(100);
-- ADICIONANDO CONTE�DO A ESSA VARIAVEL ATRAV�Z DE UMA FUN��O CRIADA
EXECUTE :g_DESCRICAO:=obter_decricao(1);
-- REALIZANDO O PRINT DO CONTE�DO
PRINT g_DESCRICAO;

-- INCREMENTANDO O PL-SQL COM A VARIAVEL
DECLARE
    v_ID SEGMERCADO.ID%type;
    v_DESCRICAO SEGMERCADO.DESCRICAO%type;
BEGIN
    v_DESCRICAO := obter_decricao(1);
    dbms_output.put_line('A descricao do segmento do mercao � '||v_DESCRICAO);
END;

-- CRIANDO CONDICIONAL NO PL-SQL

-- PEQUENO FATURA AT� 10000
-- M�DIO ENTRE 10001 E 50000
-- M�DIO GRANDE ENTRE 50001 E 100000
-- GRANDE MAIS DE 100000
DECLARE
    v_FATURAMENTO CLIENTE.FATURAMENTO_PREVISTO%TYPE := 65000;
    v_CATEGORIA CLIENTE.CATEGORIA%TYPE;
BEGIN
    IF v_FATURAMENTO <= 10000 THEN
    v_CATEGORIA := 'PEQUENO';
    ELSIF v_FATURAMENTO <= 50000 THEN
    v_CATEGORIA := 'M�DIO';
    ELSIF v_FATURAMENTO <= 100000 THEN
    v_CATEGORIA := 'M�DIO GRANDE';
    ELSE
    v_CATEGORIA := 'GRANDE';
    END IF;
    dbms_output.put_line('A categoria � de '|| v_categoria);
END;

-- CRIANDO LOOP

DECLARE
    v_SEGMERCADO CLIENTE.SEGMERCADO_ID%TYPE := 2;
    v_ID CLIENTE.ID%TYPE := 1;
BEGIN
    LOOP
        UPDATE CLIENTE SET SEGMERCADO_ID = v_SEGMERCADO WHERE ID = v_ID;
        v_ID := v_ID + 1;
    EXIT WHEN v_ID > 3;
    END LOOP;
END;     




-- CRIANDO UMA PROCEDURE
CREATE PROCEDURE inlcuir_segmercado
--PASSANDO OS PARAMETROS
(p_ID NUMBER, p_DESCRICAO VARCHAR2)
IS
-- CASO QUEIRA ADICIONAR VARIAVEIS QUE N�O S�O PAR�METROS
-- COMO N�O � O CASO NESTE MOMENTO IREI DEIXAR VAZIO
BEGIN
    INSERT INTO SEGMERCADO (ID, DESCRICAO) VALUES (p_ID,UPPER(p_DESCRICAO));
    COMMIT;
END;
-- EXECUTANDO A PROCEDURE
EXECUTE inlcuir_segmercado(4, 'Farmaceuticos');



-- CASO EU QUEIRA ALTERAR UMA PROCEDURE POSSO USAR O CREATE OR REPLACE
CREATE OR REPLACE PROCEDURE inlcuir_segmercado
(p_ID IN SEGMERCADO.ID%type, p_DESCRICAO IN SEGMERCADO.DESCRICAO%type)
IS
BEGIN
    INSERT INTO SEGMERCADO (ID, DESCRICAO) VALUES (p_ID,UPPER(p_DESCRICAO));
    COMMIT;
END;

EXECUTE inlcuir_segmercado(4, 'Farmaceuticos');

-- CRIANDO UMA PROCEDURE PARA INCLUIR UM CLIENTE
CREATE OR REPLACE PROCEDURE salvando_cliente
(
p_ID CLIENTE.ID%TYPE, 
p_RAZAO CLIENTE.RAZAO_SOCIAL%TYPE, 
p_CNPJ CLIENTE.CNPJ%TYPE,
p_SEGMENTO CLIENTE.SEGMERCADO_ID%TYPE,
p_FAT CLIENTE.FATURAMENTO_PREVISTO%TYPE
)
IS
    v_CATEGORIA CLIENTE.CATEGORIA%TYPE;
BEGIN
    
    v_CATEGORIA := CATEGORIA_CLIENTE(p_FAT);
    
    INSERT INTO CLIENTE
    VALUES
        (p_ID, 
         p_RAZAO, 
         p_CNPJ,
         p_SEGMENTO,
         SYSDATE,
         p_FAT,
         v_CATEGORIA);
    COMMIT;     
END;
SELECT * FROM CLIENTE;
EXECUTE salvando_cliente(1,'AOS.DATA', '1122233300',3,100000, 'IND');

-- CRIANDO UMA PROCEDURE QUE FORMATA O CNPJ
-- O "IN" NO PARÂMETRO ALTERA SOMENTE O VALOR DENTRO DA PROCEDURE NÃO MODIFICANDO A VARIAVEL EXTERNA E ESTE PARÂMETRO SÓ RECEBE VALOR, NÃO É POSSIVEL MODIFICAR OU TENTAR "DEVOLVER ESTE PARAMETRO PARA VARIAVEIS EXTERNAS"
-- O "OUT" NO PARÂMETRO ALTERA O VALOR DA VARIAVEL EXTERNA TBM, NÃO É POSSIVEL RECEBER VALOR EM UMA VARIAVEL OUT. 
-- "IN OUT" NO PARÂMETRO FAZ COM QUE O PARÂMETRO RECEBA E DEVOLVA O VALOR, ATRIBUINDO AS DUAS CARACTERISTICAS AO PARÂMETRO CONFIGURADO.
CREATE OR REPLACE PROCEDURE FORMATA_CNPJ
(p_CNPJ IN CLIENTE.CNPJ%TYPE, p_CNPJ_SAIDA OUT CLINTE.CNPJ%TYPE)
IS 
BEGIN
   p_CNPJ_SAIDA := SUBSTR(p_CNPJ,1,2) || '.' || SUBSTR(p_CNPJ,3,3) || '.' || SUBSTR(p_CNPJ,6,3) || '/' || SUBSTR(p_CNPJ,9,4) || '-' || SUBSTR(p_CNPJ,13,2);
END;




-- CRIANDO UMA FUN��O
CREATE OR REPLACE FUNCTION obter_decricao
(p_ID SEGMERCADO.ID%type)
RETURN SEGMERCADO.DESCRICAO%type
IS
    v_DESCRICAO SEGMERCADO.DESCRICAO%type;
BEGIN
    SELECT DESCRICAO INTO v_DESCRICAO FROM SEGMERCADO WHERE ID = p_ID;
    RETURN v_DESCRICAO;
END;

SELECT ID, obter_decricao(1) FROM SEGMERCADO;
SELECT ID, obter_decricao(ID) FROM SEGMERCADO;

SELECT * FROM SEGMERCADO;

-- CRIANDO FUN��O QUE RETORNA A CATEGORIA DA EMPRESA
CREATE OR REPLACE FUNCTION categoria_cliente
(p_FATURAMENTO IN CLIENTE.FATURAMENTO_PREVISTO%TYPE)
RETURN CLIENTE.CATEGORIA%TYPE
IS
    v_CATEGORIA CLIENTE.CATEGORIA%TYPE;
BEGIN
    IF p_FATURAMENTO <= 10000 THEN
    v_CATEGORIA := 'PEQUENO';
    ELSIF p_FATURAMENTO <= 50000 THEN
    v_CATEGORIA := 'M�DIO';
    ELSIF p_FATURAMENTO <= 100000 THEN
    v_CATEGORIA := 'M�DIO GRANDE';
    ELSE
    v_CATEGORIA := 'GRANDE';
    END IF;
    RETURN v_CATEGORIA;
END;

SELECT C.RAZAO_SOCIAL, C.FATURAMENTO_PREVISTO, categoria_cliente(C.FATURAMENTO_PREVISTO) FROM CLIENTE C;